apiVersion: v1
kind: Namespace
metadata:
  name: {{ .Values.namespace }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Values.database.secretName }}
  namespace: {{ .Values.namespace }}
type: Opaque
data:
  mysql-root-pass: {{ .Values.database.rootPassword }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.database.service.name }}
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.app }}
    tier: {{ .Values.database.tier }}
spec:
  clusterIP: {{ .Values.database.service.clusterIP }}
  ports:
    - port: {{ .Values.database.service.port }}
      targetPort: {{ .Values.database.containerPort }}
  selector:
    app: {{ .Values.app }}
    tier: {{ .Values.database.tier }}
---
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: {{ .Values.database.pvc.storageClass }}
provisioner: docker.io/hostpath
volumeBindingMode: Immediate
parameters:
  type: pd-ssd
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.database.name }}-statefulset
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.app }}
    tier: {{ .Values.database.tier }}
spec:
  serviceName: {{ .Values.database.service.name }}
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.app }}
      tier: {{ .Values.database.tier }}
  template:
    metadata:
      labels:
        app: {{ .Values.app }}
        tier: {{ .Values.database.tier }}
    spec:
      containers:
        - name: mysql-container
          image: "{{ .Values.database.image }}"
          ports:
            - containerPort: {{ .Values.database.containerPort }}
              name: mysql-port
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.database.secretName }}
                  key: mysql-root-pass
          volumeMounts:
            - name: mysql-storage
              mountPath: /var/lib/mysql
  volumeClaimTemplates:
    - metadata:
        name: mysql-storage
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: {{ .Values.database.pvc.storageClass }}
        resources:
          requests:
            storage: {{ .Values.database.pvc.storageSize }}
